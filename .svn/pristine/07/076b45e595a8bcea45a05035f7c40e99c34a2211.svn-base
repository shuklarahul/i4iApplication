using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.Mvc;
using WorldRef.DataLayer;
using WorldRef.Models;
using WorldRef.BusinessLayer;
using System.Web.Security;
namespace WorldRef.Controllers
{
    public class WorldRefController : Controller
    {
        public I4IDBEntities context=new I4IDBEntities();
        public ActionResult WorldRefIndex()
        {
            SignUpWorldRefModel signUpModel = new SignUpWorldRefModel();
            signUpModel=GetAllSignUpDetails();
           
            return View(signUpModel);
        }

        #region All SignUp Details
        private SignUpWorldRefModel GetAllSignUpDetails()
        {
            SignUpWorldRefModel signUpModel = new SignUpWorldRefModel();
            List<SelectListItem> selectListCountry = new List<SelectListItem>();
            List<SelectListItem> selectList = new List<SelectListItem>();//Developer, Investor, Fabricator, Procurement Staff, Others
            selectList.Add(new SelectListItem() { Text = "I am", Value = "0" });
            selectList.Add(new SelectListItem() { Text = "Manufacturer", Value = "Manufacturer" });
            selectList.Add(new SelectListItem() { Text = "Contractor", Value = "Contractor" });
            selectList.Add(new SelectListItem() { Text = "Consultant", Value = "Consultant" });
            selectList.Add(new SelectListItem() { Text = "Trading Company", Value = "Trading Company" });
            selectList.Add(new SelectListItem() { Text = "Project Owner’s/Procurement Staff", Value = "Project Owner’s/Procurement Staff" });
            selectList.Add(new SelectListItem() { Text = "Developer", Value = "Developer" });
            selectList.Add(new SelectListItem() { Text = "Investor", Value = "Investor" });
            selectList.Add(new SelectListItem() { Text = "Fabricator", Value = "Fabricator" });
            selectList.Add(new SelectListItem() { Text = "Raw Material Supplier", Value = "Raw Material Supplier" });
            selectList.Add(new SelectListItem() { Text = "Others", Value = "Others" });
            signUpModel.TypeList = selectList;

            var content = (from p in context.Countries
                           select new { p.CountryID, p.CountryName }).AsEnumerable();

            selectListCountry.Add(new SelectListItem() { Text = "Select Country", Value = "0" });

            foreach (var item in content)
            {
                selectListCountry.Add(new SelectListItem() { Text = item.CountryName, Value = item.CountryName });

            }
            signUpModel.CountryList = selectListCountry;
            KnowledgeLogic knowIndustry = new KnowledgeLogic();
            signUpModel.IndustryList = knowIndustry.GetIndustry();
            List<SelectListItem> selectList1 = new List<SelectListItem>();
            selectList1.Add(new SelectListItem() { Text = "Type of Recruitment", Value = "0" });
            selectList1.Add(new SelectListItem() { Text = "I recruit for my Organisation only", Value = "I recruit for my Organisation only" });
            selectList1.Add(new SelectListItem() { Text = "I recruit for Other Organisations only", Value = "I recruit for Other Organisations only" });
            selectList1.Add(new SelectListItem() { Text = "Both: I recruit for my and other organisations", Value = "Both: I recruit for my and other organisations" });
            signUpModel.RecruitersTypeList = selectList1;
            return signUpModel;
        }
        #endregion

        #region Partial View for Sign in
        public ActionResult _SignIN()
        {
            return PartialView();
        }
        #endregion

        #region code for login uploader in WorldrefIndex added by Rahul  Shukla Date :29/09/2015

        public JsonResult LoginIndex(string UserName, string Password, string returnUrl)
        {
            SignUpWorldRef signup = new SignUpWorldRef();
            SignUpWorldRefModel signWorldModel = signup.Login(UserName, Password);
            if (signWorldModel != null)
            {
                HttpCookie userNameCookies = new HttpCookie("username");
                userNameCookies.Value = signWorldModel.Name;
                Response.Cookies.Add(userNameCookies);

                HttpCookie userNameCookiesq = new HttpCookie("UsrNo");
                userNameCookiesq.Value = signWorldModel.UserNo;
                Response.Cookies.Add(userNameCookiesq);




                HttpCookie genraluserPhoto = new HttpCookie("GenuserPhoto");
                genraluserPhoto.Value = signWorldModel.PhotoAttach;
                Response.Cookies.Add(genraluserPhoto);

                HttpCookie userNoCookies = new HttpCookie("UName");
                userNoCookies.Value = UserName;
                Response.Cookies.Add(userNoCookies);

                HttpCookie userNameCookies1 = new HttpCookie("UserId");
                userNameCookies1.Value = signWorldModel.Id.ToString();
                Response.Cookies.Add(userNameCookies1);



                HttpCookie userNameCookies2 = new HttpCookie("UserRole");
                userNameCookies2.Value = signWorldModel.UserRole.ToString();
                Response.Cookies.Add(userNameCookies2);

                if (signWorldModel.UserRole == "W")

                    return Json("ue", JsonRequestBehavior.AllowGet);
                else
                    return Json("re", JsonRequestBehavior.AllowGet);
            }
            else
            {
                signWorldModel = signup.SignInCommonUser(UserName, Password);
                if (signWorldModel != null)
                {
                    HttpCookie userNameCookies = new HttpCookie("Cusername");
                    userNameCookies.Value = signWorldModel.Name;
                    Response.Cookies.Add(userNameCookies);

                    HttpCookie userNameCookies1 = new HttpCookie("CUserId");
                    userNameCookies1.Value = signWorldModel.Id.ToString();
                    Response.Cookies.Add(userNameCookies1);
                    return Json("wi", JsonRequestBehavior.AllowGet);

                }
                else
                {

                    TempData.Clear();

                    return Json("nr", JsonRequestBehavior.AllowGet);
                }
            }
            
        }
        #endregion
        #region code for sign out  added by rahul shukla modified date: 29/09/2015
        public ActionResult SignOut()
        {
            Response.Cookies.Clear();
            FormsAuthentication.SignOut();

            string[] myCookie = Request.Cookies.AllKeys;
            foreach (string cookie in myCookie)
            {
                Response.Cookies[cookie].Expires = DateTime.Now.AddDays(-1);
            }

            Session.Clear();

            return RedirectToAction("WorldrefIndex");
        }
        #endregion

    }
}