
@model WorldRef.Models.WorldRefExcelDataModel
@{
    var msg = TempData["msg"] ?? string.Empty;
    TempData["msg"] = "";
    var msgColor = TempData["vColor"] ?? string.Empty;
    TempData["vColor"] = "";
    var data = TempData["Data"] ?? string.Empty;
    TempData["Data"] = "";
}

@{
    Layout = null;
}


<style>
    html, body {
        margin: 0;
        padding: 0;
    }

    #map-canvas {
        height: 300px;
        width: 448px;
        margin: 0;
        padding: 0;
        display: none;
    }

    .controls {
        margin-top: 16px;
        border: 1px solid transparent;
        border-radius: 2px 0 0 2px;
        box-sizing: border-box;
        -moz-box-sizing: border-box;
        height: 32px;
        outline: none;
        box-shadow: 0 2px 6px rgba(0, 0, 0, 0.3);
    }

    #pac-input:focus {
        border-color: #4d90fe;
    }

    .pac-container {
        font-family: Roboto;
    }

    #type-selector {
        color: #fff;
        background-color: #4d90fe;
        padding: 5px 11px 0px 11px;
    }

        #type-selector label {
            font-family: Roboto;
            font-size: 13px;
            font-weight: 300;
        }
</style>

<script>
    $('#pac-input').keypress(function (event) {
        if (event.keyCode == 13) {
            return false;
        }
    });

</script>
<script>
    // This example adds a search box to a map, using the Google Place Autocomplete
    // feature. People can enter geographical searches. The search box will return a
    // pick list containing a mix of places and predicted search terms.
    var eventsFired = 0;
    function initialize() {
        var markers = [];
        var map = new google.maps.Map(document.getElementById('map-canvas'), {
            mapTypeId: google.maps.MapTypeId.ROADMAP
        });

        var defaultBounds = new google.maps.LatLngBounds(
            new google.maps.LatLng(28.42238, 77.03714),
            new google.maps.LatLng(28.42238, 77.03714));
        map.fitBounds(defaultBounds);

        // Create the search box and link it to the UI element.
        var input = (
document.getElementById('pac-input'));
        map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);

        var searchBox = new google.maps.places.SearchBox(
          (input));

        // [START region_getplaces]
        // Listen for the event fired when the user selects an item from the
        // pick list. Retrieve the matching places for that item.
        google.maps.event.addListener(searchBox, 'places_changed', function () {
            var places = searchBox.getPlaces();

            if (places.length == 0) {
                return;
            }
            for (var i = 0, marker; marker = markers[i]; i++) {
                marker.setMap(null);
            }

            // For each place, get the icon, place name, and location.
            markers = [];
            var bounds = new google.maps.LatLngBounds();
            for (var i = 0, place; place = places[i]; i++) {
                var image = {
                    url: place.icon,
                    size: new google.maps.Size(51, 51),
                    origin: new google.maps.Point(0, 0),
                    anchor: new google.maps.Point(17, 34),
                    scaledSize: new google.maps.Size(25, 25)
                };

                // Create a marker for each place.
                var marker = new google.maps.Marker({
                    map: map,
                    icon: image,
                    title: place.name,
                    position: place.geometry.location
                });

                markers.push(marker);

                bounds.extend(place.geometry.location);
            }

            map.fitBounds(bounds);
        });

        // [END region_getplaces]

        // Bias the SearchBox results towards places that are within the bounds of the
        // current map's viewport.
        google.maps.event.addListener(map, 'bounds_changed', function () {
            var bounds = map.getBounds();
            searchBox.setBounds(bounds);
        });
    }
    function loadScript() {
        if (eventsFired == 0) {
            $("#map-canvas").show();
            initialize();
            eventsFired++;
        }
    }
</script>
<style>
    #target {
        width: 345px;
    }
</style>
<style>
    input[type=email], input[type=password], input[type=tel], input[type=text] {
        width: 300px;
    }
</style>
<div class="profile_part2">

    <h4 class="fW" style="margin: 7px 0;">Edit Project</h4>

    @using (Html.BeginForm("EditProject", "WorldRef", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {

        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true)

        <ul class="pE addW" style="padding: 20px 20px 0 20px; margin-bottom: 10px;">

            @Html.HiddenFor(model => model.id)

            <li>
                <span class="pEdit manage-search">Project Name:</span>
                <label class="lp">@Html.EditorFor(model => model.ProjectName)</label>
                @Html.ValidationMessageFor(model => model.OrganizationName)
            </li>

            <li>

                <span class="pEdit manage-search">By:</span>
                <label class="lp">@Html.EditorFor(model => model.OrganizationName)</label>
                @Html.ValidationMessageFor(model => model.CustomerName)

            </li>
            <li>
                <span class="pEdit manage-search">For:</span>
                <label class="lp">@Html.EditorFor(model => model.CustomerName)</label>
                @Html.ValidationMessageFor(model => model.ProjectName)
            </li>
            <li>

                <span class="pEdit manage-search">For Industry:</span>
                <label class="lp">@Html.EditorFor(model => model.CustomerIndustryType)</label>
                @Html.ValidationMessageFor(model => model.Type)

            </li>
            <li>
                <span class="pEdit manage-search">Contribution:</span>
                <label class="lp">@Html.EditorFor(model => model.Type)</label>
                @Html.ValidationMessageFor(model => model.Year)
            </li>
            <li>

                <span class="pEdit manage-search">Country of Execution:</span>
                <label class="lp">@Html.EditorFor(model => model.Country)</label>
                @Html.ValidationMessageFor(model => model.Country)

            </li>
            <li>

                <span class="pEdit manage-search">Status:</span>
                <label class="lp">@Html.EditorFor(model => model.Status)</label>
                @Html.ValidationMessageFor(model => model.Status)

            </li>
            <li>

                <span class="pEdit manage-search">Year of Execution:</span>
                <label class="lp">@Html.EditorFor(model => model.Year)</label>
                @Html.ValidationMessageFor(model => model.CustomerIndustryType)

            </li>
            <li>

                <span class="pEdit manage-search">Description:</span>
                <label class="lp">@Html.EditorFor(model => model.Description)</label>
                @Html.ValidationMessageFor(model => model.Description)

            </li>
            <li>

                <span class="pEdit manage-search">We are:</span>
                <label class="lp" style="text-align: left;">
                    <label>@Model.UserType</label>
                </label>
                @Html.ValidationMessageFor(model => model.Description)

            </li>
            <li>

                <span class="pEdit manage-search">Search Keywords:</span>
                <label class="lp">@Html.EditorFor(model => model.SearchKeywords)</label>
                @Html.ValidationMessageFor(model => model.SearchKeywords)

            </li>


            <li>

                <span class="pEdit manage-search">Add Location:</span>
                <label class="lp">
                    @Html.TextBoxFor(model => model.ProjectLocation, new { id = "pac-input", @placeholder = "Add Location", @onclick = "loadScript();" })
                    @*<input id="pac-input" type="text" placeholder="Search Box" onclick="loadScript();">*@
                    @*<input type ="text" id ="txtLocation" />*@

                </label>


            </li>
            <li>
                <div id="map-canvas"></div>
            </li>

            <li>
                <span class="pEdit manage-search privacy-btn" style="font-size: 13px; font-weight: bold; width: 13%;">Privacy :</span>
                <span style="color: green">Please select, whatever you do not want users to see in the search.</span>
                <span class="halfType">
                    @Html.CheckBox("IsCustomer", Model.IsCustomer)  For (The Customer's Name)
                    <br />
                    @Html.CheckBox("IsOrganization", Model.IsOrganization)  By (The contributor’s Name)
                    <br />
                    @Html.CheckBox("IsProject", Model.IsProject) Name of Project
                    <br />
                </span>
                <span class="halfType">
                    @Html.CheckBox("IsStatus", Model.IsStatus)  Status
                    <br />
                    @Html.CheckBox("IsYear", Model.IsYear)  Year of Execution
                    <br />
                </span>
                @* <input type="checkbox" id="Organization" name="Organization" value="your Organization Name">Your Organization Name<br>*@


            </li>

        </ul>

        <div class="centreAlign">
            <label class="lp">
                <input type="submit" class="pEButton" id="otherButton" value="Save">
                @*  <button class="pEButton" value="Save" id="otherButton">Save</button>*@

            </label>
        </div>
    }


</div>

<script>

    $("#otherButton").bind("click", function () {
        return validateForm();
    });
    function validateForm() {
        var projectName = document.getElementById("ProjectName").value;
        var Orag = document.getElementById("OrganizationName").value;
        var Customer = document.getElementById("CustomerName").value;
        var Ctype = document.getElementById("CustomerIndustryType").value;
        var type = document.getElementById("Type").value;
        var country = document.getElementById("Country").value;
        var status = document.getElementById("Status").value;
        var year = document.getElementById("Year").value;

        if ((projectName == null || projectName == "") && (Orag == null || Orag == "") && (Customer == null || Customer == "") && (Ctype == null || Ctype == "") &&
            (type == null || type == "") && (country == null || country == "") && (status == null || status == "") &&
            (year == null || year == "")) {
            alert("Please enter  At least one field");
            return false;
        }

    }

</script>

